$PSVersionTable.PSVersion // returns version of powershell

update-help
Get-Help -Name <cmdlet>
Get-Help *web*


Get-modules // displays list of modules in your current session
Get-modules -ListAvailable // displays all of your modules
Import-module // loads for current session
Remove-module

Get-Command
Get-Command -Verb Get // list all command with the verb get
Get-Command -Noun web* // list all command with "web" in the noun portion
Get-command -Module <module_name> // list all commands from a particular module


Get-PSRepository // list remote repositories

Install-Module -Name Az -AllowClobber -Scope CurrentUser // install module from PSGallery Repo





$variable // declared by using $ sign at the front

Object output allows us to access the results of a command for later use more easily
Everything is an object in Powershell!!!

Hashtable
----------

@{
    Adapter = 'Ethernet'
    IPV4Address = '192.1681.81'
    SubnetMask = '255.255.255.0'
}

Example
--------

PS C:\> $computers = Get-Content C:\Example.txt
PS C:\> $computers 
DC1 [0]
DC2 [1]
DC3 [3]
// saved as an array

PS C:\> $computers[0]
DC1 

$string = Write-Output 'Hello World!'
$string | Get-Member // displays all of the type and all of the props and methods of the object
$string.Length
$string.ToUpper()
[pscustomobject]$hashtable // type accelerator; converts to a custom object

Get-Content -Path C:\Example.txt | ForEach-Object { $PsItem}
Get-Content -Path C:\Example.txt | ForEach-Object { Test-Connection -Computername $PsItem }
Get-CimInstance -ClassName "win32_OperatingSystem" | Select-Object * // displays a ton of properties about the system


$env:PSModulePath // displays directories defined to import modules into your shell



Get-Alias // display list of default aliases
Get-Service // display list of services and their state
Add-Content -Path <path> -Value <content>
Get-Content <path to file>


Test-Connection // better ping alternative

